<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>